<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
</root>